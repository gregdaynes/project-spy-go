@import "variables.css" layer(variables);
@import "reset.css" layer(reset);
@import "global.css" layer(global);

@layer ui {
	body {
		max-height: 100dvh;
		display: flex;
		flex-direction: column;
	}

	application-header {
		display: grid;
		grid-template-columns: 1fr auto 1fr;
		justify-items: center;
		padding: var(--s-s);
		align-items: center;
		position: relative;

		info-dialog {
			place-self: start;
		}

		h1 {
			grid-column: 2 / 3;
		}

		#filter-button {
			grid-column: 3 / 4;
			place-self: end;
		}

		[type=search] {
			grid-column: 1 / 4;
		}
	}

	application-wrapper {
		display: flex;
		overflow: hidden;
		flex: 1;

		main {
			overflow: hidden;
			display: flex;
			flex: 1;
		}
	}

	lane-reel {
		display: flex;
		overflow-x: auto;
		overflow-y: hidden;
		gap: var(--s-s);
		width: 100%;
		padding-inline: var(--s-s);
		justify-content: center;

		& > * {
			flex: 0 0 ;
		}
	}

	button,
	a {
		&.with-border {
			border: 1px solid;
		}

		&.icon {
			display: block;
			padding: var(--s-xs);

			svg {
				height: 0.75em;
				height: 1cap;
				width: 0.75em;
				width: 1cap;
			}
		}

		&.close {
			padding: var(--s-2xs);
		}
	}

	task-dialog dialog {
		width: 100%;
		height: 100%;
	}

	dialog {
		padding: 0;
		max-width: 66dvw;
		max-height: 66dvh;
		overflow: visible;

		scrollbar-width: none;

		&::-webkit-scrollbar {
			width: 0px;
			background: transparent;
		}

		&[open] {
			display: flex;
			cursor: pointer;
			z-index: calc(infinity);

			> * {
				cursor: default;
			}
		}

		&::backdrop {
			opacity: 0.9;
			background: inherit;
		}

		dialog-wrapper {
			flex: 1;
			display: flex;
			flex-direction: column;
			gap: var(--s-s);
			padding-block: var(--s-s);

			> * {
				padding-inline: var(--s-s);
			}

			header {
				grid-template-areas: "label close" "input input";
				grid-template-columns: 1fr max-content;
				display: grid;
				gap: var(--s-xs);

				&.with-title {
					grid-template-areas: "label close";
				}

				label {
					grid-area: label;
				}

				h3 {
					grid-area: label;
				}

				input {
					grid-area: input;
				}

				form {
					grid-area: close;
				}
			}

			dialog-main {
				display: flex;
				flex-direction: column;
				flex-grow: 1;

				textarea {
					flex: 1;
					background: none;
					font-family: var(--font-mono);
				}
			}

			dialog-details {
				display: flex;
				align-items: center;
				gap: var(--s-xs)
			}

			task-priority {
				border: 1px solid;
				padding: var(--s-2xs);
			}

			task-id {
				border: 1px solid;
				padding: var(--s-2xs);
			}

			task-tags {
				display: flex;
				gap: var(--s-xs);
			}

			task-tag {
				border: 1px solid;
				padding: var(--s-2xs);
			}

			task-order {
				border: 1px solid;
				padding: var(--s-2xs);
			}

			footer {
				form {
					display: flex;
					gap: var(--s-s);
					justify-content: center;

					select {
						background: none;
					}

					button-group {
						--_background: light-dark(rgb(255 255 255), rgb(30 30 30));
						--_background-second: light-dark(rgb(245 245 245), rgb(40 40 30));
						--_hover: light-dark(rgb(245 245 245), rgb(40 40 40));
						--_hover-second: light-dark(rgb(235 235 235), rgb(50 50 50));

						display: flex;
						position: relative;
						border: 1px solid;

						button {
							cursor: pointer;
							padding: 1rem;
							width: 100%;
							text-align: center;

							&:hover {
								background: var(--_hover);
							}
						}

						details.dropdown {
							summary {
								display: inline-flex;
								cursor: pointer;

								&:hover {
									background: var(--_hover);
								}

								&::after {
									content: 'â–¾';
									padding: 1rem;
								}

								&::-webkit-details-marker {
									display: none;
								}
							}

							&[open] {
								> summary {
									background: var(--_hover);
								}

								> div {
									background: var(--_background-second);
									left: 0;
									width: 100%;
									position: absolute;
									z-index: calc(infinity);
									border: 1px solid;
									border-top: none;
									box-sizing: padding-box;
									margin-inline: -1px;
									width: calc(100% + 2px);

									button {
										box-sizing: border-box;
										cursor: pointer;

										&:hover {
											background: var(--_hover-second);
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}

	#filter-input {
		position: absolute;

		&:not(:focus):empty:placeholder-shown {
			height: 0;
			overflow: hidden;
			padding: 0;
			border: none;
			display: block;
		}
	}

	task-lane {
		display: flex;
		flex-direction: column;
		position: relative;

		&:has(input[type="checkbox"]:checked),
		&:has(task-lane-body:empty) {
			padding: var(--s-m);

			task-lane-header {
				display: flex;
				gap: 1rem;
				position: absolute;
				inset: 0;
				writing-mode: vertical-lr;
				align-items: center;
				border: none;
				flex-wrap: nowrap;

				h2 {
					order: 2;
					text-wrap: nowrap;
				}

				hr {
					order: 3;
					margin: unset;
					border-bottom: none;
				}
			}

			task-card {
				display: none;
			}
		}

		&:has(task-lane-body:not(:empty)):not(.collapsed):not(:has(input[type="checkbox"]:checked)) {
			height: 100%;
			flex-basis: calc(((100dvw - var(--s-s)) / 3) - (1 * var(--s-s)));
			min-width: 350px;
			max-width: 450px;
		}

		task-lane-header {
			display: flex;
			flex-wrap: wrap;
			justify-content: space-between;
			align-items: center;

			a {
				flex-shrink: 0;
			}

			hr {
				flex-basis: 100%;
				flex-grow: 1;
				margin-block-start: var(--s-s);
				border: 1px solid;
			}

			label {
				cursor: pointer;
			}
		}

		task-lane-body {
			display: flex;
			flex-direction: column;
			gap: var(--s-xs);
			height: 100%;
			overflow-y: scroll;
			padding-block: var(--s-s);
			scrollbar-width: none;

			&::-webkit-scrollbar {
				width: 0px;
				background: transparent;
			}
		}
	}

	task-lane .task:last-child {
		margin-block-end: var(--s-m);
	}

	task-lane .task:first-child {
		margin-block-start: var(--s-m);
	}


	.hidden {
		display: none;
		padding: 0 !important;
		margin: 0 !important;
	}

	task-card{
		--_hover: light-dark(rgb(245 245 245), rgb(40 40 40));

		border: 1px solid;
		padding: var(--s-s);
		display: flex;
		flex-direction: column;
		gap: var(--s-xs);
		width: calc(100% - 1px);

		task-body:empty {
			display: none;
		}

		task-footer {
			display: flex;
			justify-content: space-between;
		}

		task-footer:empty {
			display: none;
		}

		&.enhanced {
			cursor: pointer;
			position: relative;

			&:hover {
				background: var(--_hover);
			}

			&:active {
				border-bottom: 1px solid;
				margin-top: 0;
			}

			.mnemonic {
				color: var(--color-primary);
				position: absolute;
				padding: var(--s-2xs) var(--s-xs);
				inset-block-start: 0;
				inset-inline-end: 0;
				display: block;
			}
		}
	}

	body:has(dialog[open]) .backdrop {
		position: absolute;
		inset: 0;
		background: rgb(30,30,30);
		opacity: 0.9;
	}

	dialog  {
		.col-2 {
			display: grid;
			grid-template-columns: 1fr 1fr;
			gap: var(--s-s);
		}

		dialog-wrapper:has(nav) {
			padding-block-end: 0;

			footer {
				padding-inline: 0;
			}
		}

		div {
			flex-direction: column;
			gap: var(--s-xs);
		}

		nav {
			display: flex;

			label {
				cursor: pointer;
				flex-grow: 1;
				outline: 2px solid white;
				padding: var(--s-2xs);
				text-align:center;
			}

			label:has(input:checked) {
				color: #000;
				background: #fff;
			}

			input {
				display: none;
			}
		}
	}

	#panel-about {
		display: none;
	}

	#panel-info {
		display: none;
	}

	dialog-wrapper:has(label[for="show-tab-about"] > input:checked) #panel-about {
		display: flex;
	}

	dialog-wrapper:has(label[for="show-tab-info"] > input:checked) #panel-info {
		display: flex;
	}

	dl {
		display: grid;
		grid-template-columns: 2fr 1fr;
		gap: var(--s-xs);

		&.double {
			grid-template-columns: 1fr 1fr 1fr 1fr;
		}

		small {
			display: block;
			line-height: 1.1;
		}
	}

	dd {
		place-content: center;
	}
}
